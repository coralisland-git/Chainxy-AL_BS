import scrapy
import json
import csv
import re
from scrapy.spiders import Spider
from scrapy.http import FormRequest
from scrapy.http import Request
from scrapy.selector import HtmlXPathSelector
from chainxy.items import ChainItem

class moneymart(scrapy.Spider):
    name = 'moneymart'
    history = []

    def __init__(self,*args,**kwargs):
        # load json seed file
        with open('master_us_zip_keyseeds.json') as f:
            self.locations = json.load(f)
    
    def start_requests(self):       
        request_url = 'https://www.moneymart.com/StoreDetails/GoogleAPIServiceCall'
        for location in self.locations:
        
            #
            # change form data for post request
            form_data = {
                "startRcdNum":"0",
                "radius":"100",
                "StoreNum":"",    
                "lat": str(location['latitude']),
                "lng": str(location['longitude']),
            }
            yield FormRequest(url=request_url, method="POST", formdata=form_data, callback=self.parse)                       
			
    def parse(self, response):
    
        # XML response
        store_list = response.xpath('//StoresList/Store')
        
        for store in store_list:
            item = ChainItem()

            item['store_number'] = store.xpath('.//StoreNum/text()').extract_first()
            item['type'] = store.xpath('.//Name/text()').extract_first()
            item['address'] = store.xpath('.//Address1/text()').extract_first()
            item['address2'] = store.xpath('.//Address2/text()').extract_first()
            item['city'] = store.xpath('.//City/text()').extract_first()
            item['state'] = store.xpath('.//Province/text()').extract_first()
            item['zip_code'] = store.xpath('.//PostalCode/text()').extract_first()
            item['country'] = store.xpath('.//Country/text()').extract_first()
            item['phone_number'] = store.xpath('.//Phone/text()').extract_first()
            item['latitude'] = store.xpath('.//Latitude/text()').extract_first()
            item['longitude'] = store.xpath('.//Longitude/text()').extract_first()
            item['store_hours'] = store.xpath('.//StoreHours/text()').extract_first()
            item['other_fields'] = store.xpath('.//Products/text()').extract_first()
            
            if item['store_number'] not in self.history
                self.history.append(item['store_number'])
                yield item    
    
